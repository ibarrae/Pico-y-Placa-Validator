/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package picoyplacapredictor.ui;

import picoyplacapredictor.constants.Constants;
import picoyplacapredictor.dto.DateTimeDto;
import picoyplacapredictor.dto.UserInformationDto;
import picoyplacapredictor.model.PicoYPlacaValidator;
import picoyplacapredictor.model.QuitoValidator;
import picoyplacapredictor.presenter.PicoYPlacaPredictorPresenter;
import picoyplacapredictor.presenter.PicoYPlacaPredictorPresenterImp;
import picoyplacapredictor.utils.MessageUtils;
import picoyplacapredictor.view.PicoYPlacaPredictorView;

/**
 *
 * @author Esteban Ibarra
 */
public class PicoYPlacaPredictorUI extends javax.swing.JFrame implements PicoYPlacaPredictorView {

    /**
     * Creates new form PicoYPlacaPredictorUI
     */
    public PicoYPlacaPredictorUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        licensePlateLabel = new javax.swing.JLabel();
        licensePlateTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        dateTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        timeTextField = new javax.swing.JTextField();
        checkForRestrictionButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        licensePlateLabel.setText("License plate:");

        jLabel1.setText("Date (dd-mm-yyyy):");

        jLabel2.setText("Time (hh:mm):");

        checkForRestrictionButton.setText("Check for restriction");
        checkForRestrictionButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkForRestrictionButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(licensePlateLabel)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkForRestrictionButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(licensePlateTextField)
                    .addComponent(dateTextField)
                    .addComponent(timeTextField))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(licensePlateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(licensePlateLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(timeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkForRestrictionButton)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void checkForRestrictionButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkForRestrictionButtonMouseClicked
        PicoYPlacaPredictorPresenter picoYPlacaPredictorPresenter = new PicoYPlacaPredictorPresenterImp(this);
        DateTimeDto dateTimeDto = new DateTimeDto(dateTextField.getText(), timeTextField.getText());
        UserInformationDto userInformationDto = new UserInformationDto(licensePlateTextField.getText(), dateTimeDto);
        PicoYPlacaValidator quitoValidator = new QuitoValidator(QuitoValidator.getDaysAndTimesRestrictions(), userInformationDto);
        picoYPlacaPredictorPresenter.checkRestriction(quitoValidator);
    }//GEN-LAST:event_checkForRestrictionButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PicoYPlacaPredictorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PicoYPlacaPredictorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PicoYPlacaPredictorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PicoYPlacaPredictorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new PicoYPlacaPredictorUI().setVisible(true);
        });
    }

    @Override
    public void showBlankLicensePlateError() {
        MessageUtils.showErrorMessage(Constants.EMPTY_LICENSE_PLATE);
    }

    @Override
    public void showInvalidLicensePlateMessage() {
        MessageUtils.showErrorMessage(Constants.INVALID_LICENSE_PLATE);
    }

    @Override
    public void showBlankDateError() {
        MessageUtils.showErrorMessage(Constants.EMPTY_DATE);
    }

    @Override
    public void showDateFormatError() {
        MessageUtils.showErrorMessage(Constants.INVALID_DATE);
    }

    @Override
    public void showBlankTimeError() {
        MessageUtils.showErrorMessage(Constants.EMPTY_TIME);
    }

    @Override
    public void showTimeFormatError() {
        MessageUtils.showErrorMessage(Constants.INVALID_TIME);
    }

    @Override
    public void showCanBeOnRoadMessage() {
        MessageUtils.showInformationMessage(Constants.VALID_DATE);
    }

    @Override
    public void showCanNotBeOnRoadMessage() {
        MessageUtils.showInformationMessage(Constants.RESTRICTED_DATE);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton checkForRestrictionButton;
    private javax.swing.JTextField dateTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel licensePlateLabel;
    private javax.swing.JTextField licensePlateTextField;
    private javax.swing.JTextField timeTextField;
    // End of variables declaration//GEN-END:variables
}
